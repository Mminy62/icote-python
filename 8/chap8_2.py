'''
문제
각 식량창고엔 정해진 식량을 저장
개미가 메뚜기 마을의 식량창고 공격
인접한 식량창고를 연속으로 약탈하면 정찰병한테 들킴
반드시 하나는 띄어있는 곳을 약탈
연속되게 2개 X

개미가 얻을 수 있는 식량의 최댓값 구하기

- 생각의 흐름
N < 100 K < 1000 이므로 n^2까지 복잡도가 성립은 하지만,
뚜렷하게 dfs, bfs로 풀릴 것 같진 않고...
이진 탐색도 그러기엔 탐색 데이터가 그렇게 안크고
정렬도 위치가 바뀌면 안되니까 안되고
그리디 탐욕법도 안통한다(제일 큰 수만 고르기 안됨)

-> DP

점화식의 보텀업 방식으로 한다면 f(n) = f(n-1) + ,,,와 같이 인접한 더 작은 항에 관한 식이므로 n항을 기준으로 왼쪽을 턴다고 생각하고 시작한다.

'''

n = int(input())

foods = list(map(int, input().split()))

d = [0] * (n+1)
d[0] = foods[0]
d[1] = max(foods[0], foods[1])

for i in range(2, n):
    d[i] = max(d[i-1], d[i-2] + foods[i]) # 이전까지의 결과가 높았던 것/ 현재에서 시작해서 더하는 것


#i-2에 대해선 밑에까지의 최대값을 갖고 있다는 것이 보장되어야 한다.

print(d)
print(d[n-1])
